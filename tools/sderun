#!/usr/bin/env sh
function usage {
  echo 'usage: sderun <model-name> <input-file> [compare-args...]'
  echo 'Set the SDE_HOME environment variable to the SDEverywhere directory name.'
  echo 'For example: export SDE_HOME=$HOME/Projects/SDEverywhere'
  echo 'This script assumes that each model is in a directory under $SDE_HOME/models'
  echo 'with the same name as the MDL file basename.'
  echo 'First run the model in 64-bit Vensim and export the run in DAT format to the'
  echo '{input-file}.dat file.'
  exit 1
}
if [[ -z $SDE_HOME ]]; then usage; fi
if [[ -z $1 ]]; then usage; fi
if [[ -z $2 ]]; then usage; fi
if [[ ! -d $SDE_HOME ]]; then usage; fi
if [[ ! -d $SDE_HOME/models ]]; then usage; fi
if [[ ! -d $SDE_HOME/tools ]]; then usage; fi
if [[ ! -d $SDE_HOME/build ]]; then mkdir $SDE_HOME/build; fi
# SDE=sde
SDE="node sde.js"
MDL_NAME=$1
DATA_FILE=$2
MDL_PATH=$SDE_HOME/models/$MDL_NAME
# Run the executable and capture output into a text file.
pushd $SDE_HOME/build >/dev/null
./$MDL_NAME $DATA_FILE >$DATA_FILE.txt
popd >/dev/null
# Convert the text file from TSV format into Vensim dat format.
$SDE log $SDE_HOME/build/$DATA_FILE.txt --dat >$SDE_HOME/build/x
mv $SDE_HOME/build/x $SDE_HOME/build/$DATA_FILE.txt
# Compare the output to a dat file saved in Vensim, with optional parameters passed through.
$SDE compare $MDL_PATH/$DATA_FILE.dat $SDE_HOME/build/$DATA_FILE.txt $3 $4
